<?xml version="1.0"?>
<!--
  =============================================================================
    Master build file for Megastage DCPU Debugger

    This script should be started with the following command line :

        ant <target>

  =============================================================================
-->

<project name="Megastage DCPU Debugger" default="jar" basedir=".">

    <description>
        Build file for Megastage DCPU Debugger
    </description>

    <!--
      ===============================================================================
        Miscellaneous settings
      ===============================================================================
    -->
    <!-- Global project properties -->
    <property name="project.name.text" value="dcpu-debugger"/>
    <property name="project.name.file" value="dcpu-debugger"/>
    <property name="project.version" value="1.0"/>

    <!-- Compiler settings -->
    <property name="compiler.debug" value="on"/>
    <property name="compiler.optimize" value="off"/>
    <property name="compiler.deprecation" value="on"/>

    <!--
       ========================================================================
         Set the properties related to the source tree
       ========================================================================
    -->
    <!-- Source locations for the build -->
    <property name="build.dir"     value="${basedir}/build"/>
    <property name="libs.dir"      value="${basedir}/lib"/>
    <property name="src.dir"       value="${basedir}/src"/>
    <property name="resources.dir" value="${basedir}/src"/>
    <property name="classes.dir"   value="${basedir}/classes"/>

    <!-- Name of deliverable -->
    <property name="final.jar.name" value="${basedir}/dcpu-debugger.jar"/>
    <property name="final.zip.name" value="${basedir}/${project.name.file}-${project.version}.zip"/>

    <patternset id="libs">
        <include name="libs/*.jar"/>
    </patternset>


    <!--
      ========================================================================
        Initialize the build. Must be called by all targets
      ========================================================================
    -->
    <target name="init">

        <tstamp/>

        <echo message="--------- ${project.name.text} ${project.version} ---------"/>
        <echo message=""/>

        <echo message="java.class.path = ${java.class.path}"/>
        <echo message="os.name         = ${os.name}" />
        <echo message="java.home       = ${java.home}"/>
        <echo message="basedir         = ${basedir}"/>
        <echo message="target          = ${final.zip.name}"/>
        <echo message=""/>

    </target>

    <path id="libs.classpath">
        <fileset dir="${libs.dir}" includes="*.jar" />
    </path>

    <!--
      ========================================================================
        Prepare the output directory by copying the source files into it
      ========================================================================
    -->
    <target name="prepare" depends="clean">

        <!-- Copy source files to source distribution.
        -->
        <mkdir dir="${classes.dir}"/>

        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
                <include name="**/*.png"/>
                <include name="**/*.jpg"/>
                <include name="**/*.bin"/>
            </fileset>
        </copy>

    </target>

    <!--
       ========================================================================
         Compiles the source directory
       ========================================================================
    -->
    <target name="compile" depends="prepare">

        <javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               debug="${compiler.debug}"
               deprecation="${compiler.deprecation}"
               optimize="${compiler.optimize}"
               nowarn="true"
               source="1.8"
               target="1.8"
               encoding="ISO-8859-1"
               includeantruntime="false">

            <classpath>
                <fileset dir="${libs.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>

        </javac>
    </target>

    <!--
       ========================================================================
         Create the runtime jar file
       ========================================================================
    -->
    <!--target name="jar" depends="clean,compile" -->
    <target name="jar" depends="compile">
        <pathconvert property="manifest.classpath" pathsep=" ">
            <chainedmapper>
                <mapper type="flatten"/>
                <mapper type="glob" from="*" to="lib/*"/>
            </chainedmapper>
            <path id="manifest.classpath">
                <fileset dir="${libs.dir}" includes="*.jar" />
            </path>
        </pathconvert>


        <jar jarfile="${final.jar.name}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Product-Title" value="${project.name.text}"/>
                <attribute name="Product-Version" value="${project.version}"/>

                <attribute name="Build-By" value="Orlof"/>

                <attribute name="Main-Class" value="org.megastage.emulator.DCPU"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>
    </target>

    <target name="dist" depends="jar" description="">
        <delete dir="${build.dir}" />
        <mkdir dir="${build.dir}" />
        <copy todir="${build.dir}/">
            <fileset dir="${basedir}" includes="lib/*.jar" />
            <fileset file="${final.jar.name}" />
            <fileset file="${basedir}/admiral.bin" />
        </copy>
    </target>

    <!--
       ========================================================================
         Generates zip of the project
       ========================================================================
    -->
    <target name="zip" depends="dist">

        <zip zipfile="${final.zip.name}" basedir="${build.dir}">
        </zip>

    </target>

    <!--
       ========================================================================
         Remove all build generated files
       ========================================================================
    -->
    <target name="clean" depends="init">

        <!-- Remove the out directory -->
        <delete dir="${build.dir}"/>
        <delete dir="${classes.dir}"/>
        <delete file="${final.jar.name}"/>
        <delete file="${final.zip.name}"/>

        <!-- Deletes all files ending with '~' -->
        <delete>
            <fileset dir="." includes="**/*~" defaultexcludes="no"/>
        </delete>

        <delete>
            <fileset dir="." includes="**/*.bak" defaultexcludes="no"/>
        </delete>

    </target>

</project>
